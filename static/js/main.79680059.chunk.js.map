{"version":3,"sources":["ModalWindowDelete.js","AccordionWindow.js","Rendering.js","App.js","reportWebVitals.js","index.js"],"names":["ModalWindowDelete","props","el","open","setOpen","deleteButtonClick","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","color","DialogContent","DialogContentText","title","DialogActions","Button","onClick","autoFocus","AccordionWindow","doneButtonClick","classes","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","button","margin","spacing","useStyles","useState","className","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","completed","AccordionDetails","variant","startIcon","Rendering","todos","map","App","setTodos","get10Notes","setGet10Notes","getAllNotes","setGetAllNotes","flexGrow","display","backgroundColor","borderRadius","paper","padding","textAlign","palette","text","secondary","useEffect","Grid","container","item","xs","Paper","fetch","then","response","json","slice","length","newList","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79680059.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ModalWindowDelete(props){\r\n\r\n    const {el, open, setOpen,deleteButtonClick} = props;\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" color=\"#f50057\">{\"\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <hr/>\r\n                        Confirming this action you allow the system to delete this record from the Database.\r\n                        Notice that it will be removed permanently. Delete?\r\n                        <br/>\r\n                        <br/>\r\n                        - {el.title} -\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={() => deleteButtonClick(el.title)} color=\"secondary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ModalWindowDelete from \"./ModalWindowDelete\";\r\n\r\nexport default function AccordionWindow(props) {\r\n\r\n    const {el,doneButtonClick,deleteButtonClick} = props;\r\n\r\n    //Styles:\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n        button: {\r\n            margin: theme.spacing(2),\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    //Modal Window:\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>\r\n                        <li className={el.completed? \"done\" : \"not-done\"}> {el.title} </li>\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <Button onClick={() => doneButtonClick(el.id)} variant=\"contained\" color=\"primary\" startIcon={<DoneIcon />}>\r\n                            Done / Undone\r\n                        </Button>\r\n                        {/*<Button onClick={() => deleteButtonClick(el.title)} variant=\"contained\" color=\"secondary\">*/}\r\n\r\n                        <Button onClick={handleClickOpen} variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />}>\r\n                            Delete\r\n                        </Button>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <ModalWindowDelete el={el} open={open} setOpen={setOpen} deleteButtonClick={deleteButtonClick}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport AccordionWindow from \"./AccordionWindow\";\r\n\r\nexport default function Rendering(props) {\r\n\r\n    const {todos,doneButtonClick,deleteButtonClick} = props;\r\n\r\n    return (\r\n        <div>\r\n            {todos.map(el =>\r\n                <p key={el.id}>\r\n                    {/*<OneTask el={el} doneButtonClick={doneButtonClick}/>*/}\r\n                        <AccordionWindow el={el} doneButtonClick={doneButtonClick} deleteButtonClick={deleteButtonClick}/>\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, {useEffect, useState} from 'react';\nimport 'fontsource-roboto';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Rendering from \"./Rendering\";\n\n//Comments: TodoList with Fetch, useEffect, useState, Bootstrap, Material-UI and Accordion.\n//Comments: Working, 06.03.21\n\nexport default function App() {\n\n    const [todos, setTodos] = useState([]);\n\n    const [get10Notes, setGet10Notes] = useState(false);\n    const [getAllNotes, setGetAllNotes] = useState(false);\n\n    const useStyles = makeStyles((theme) => ({            // use styles from material-UI for foundation, button\n        root: {\n            flexGrow: 1,\n            display: 'flex',\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n            backgroundColor: \"#bbdefb\",\n            borderRadius: 5,\n            // paddingRight: 30,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }));\n\n    const classes = useStyles();\n\n    useEffect(() => {                                          // If we click on one OR another button, clean list\n        setTodos([]);\n    }, [get10Notes, getAllNotes])\n\n\n    function getFirstTenNotes() {                                    // Get first 10 notes from the DB\n        setGet10Notes(!get10Notes);\n        if (get10Notes) {\n            // setGetAllNotes(false);                                  //it seems not necessary. See later\n            fetch('https://jsonplaceholder.typicode.com/todos')\n                .then(response => response.json())\n                .then(json => [...json].slice(0, 10))\n                .then(json => setTodos([...todos, ...json]))\n        }\n    }\n\n    function getAll() {                                              // Get ALL notes from the DB\n        setGetAllNotes(!getAllNotes)\n        if (getAllNotes) {\n            // setGet10Notes(false);                                   //it seems not necessary. See later\n            fetch('https://jsonplaceholder.typicode.com/todos')\n                .then(response => response.json())\n                .then(json => setTodos([...todos, ...json]))\n        }\n    }\n\n    function doneButtonClick(id) {                                     // Done-Undone function\n        const newList = todos.map(el =>\n            el.id === id ? {...el, completed: !el.completed} : el)\n        setTodos(newList)\n    }\n\n    function deleteButtonClick(title) {                                  // Delete function\n      let newList = todos.filter(el => el.title !== title)\n      setTodos(newList)\n    }\n\n\n    return (\n        <div className=\"container m-4\">\n            <div className={classes.root}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <h2> Todo List </h2>\n                            <h5> Fetch, useEffect, useState, Bootstrap, Material-UI, Accordion </h5>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper className={classes.paper}>\n                            <Button onClick={getFirstTenNotes} variant=\"contained\" startIcon={<CloudUploadIcon />} color=\"primary\">\n                                Get only first 10 Records\n                            </Button>\n                            {/*<button onClick={getFirstTenNotes}> Get only first 10 Notes </button>*/}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper className={classes.paper}>\n                            <Button onClick={getAll} variant=\"contained\" startIcon={<CloudUploadIcon />} color=\"primary\">\n                                Get ALL Records\n                            </Button>\n                            {/*<button onClick={getAll}> Get all Notes from DB </button><br/>*/}\n                        </Paper>\n                    </Grid>\n                    {todos.length !== 0 ?\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <p><em> *** Click on Record in order to change the status *** </em></p>\n                                <Rendering todos={todos} doneButtonClick={doneButtonClick} deleteButtonClick={deleteButtonClick}/>\n                            </Paper>\n                        </Grid>\n                        : <></>\n                    }\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}